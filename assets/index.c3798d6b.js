!function(t=".",e="__import__"){try{self[e]=new Function("u","return import(u)")}catch(i){const n=new URL(t,location),o=t=>{URL.revokeObjectURL(t.src),t.remove()};self[e]=t=>new Promise(((i,s)=>{const r=new URL(t,n);if(self[e].moduleMap[r])return i(self[e].moduleMap[r]);const d=new Blob([`import * as m from '${r}';`,`${e}.moduleMap['${r}']=m;`],{type:"text/javascript"}),h=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(d),onerror(){s(new Error(`Failed to import: ${t}`)),o(h)},onload(){i(self[e].moduleMap[r]),o(h)}});document.head.appendChild(h)})),self[e].moduleMap={}}}("/draggable-windows/assets/");class t{constructor(t,e){this.x=t,this.y=e}static fromPoint(e){return new t(e.x,e.y)}minus(e){return new t(this.x-e.x,this.y-e.y)}}class e extends HTMLElement{constructor(){super(),this.onDragCallback=this.drag.bind(this),this.initAttributes(),this.shadow=this.attachShadow({mode:"open"}),this.shadow.innerHTML='\n            <style>\n                .window-root {\n                    --window-primary-color: #d0d0d0;\n\n                    background-color: white;\n                    border: solid 1px var(--window-primary-color);\n                    min-width: 100px;\n                    max-width: 50%  ;\n                    position: absolute;\n                    z-index: 3\n\n                }\n                .window-sidebar {\n                    display: flex;\n                    justify-content: space-between;\n                    padding: 0 5px;\n                    background-color: var(--window-primary-color);\n     \n                    z-index: 1000;\n                    font-size: 25px;\n                    user-select: none;\n                }\n                .window-body {\n                    padding: 3px 5px;\n                }\n                .window-tools>span:hover {\n                    cursor: pointer;\n                }\n            </style>\n            <div class="window-root">\n                <div class="window-sidebar">\n                    <div class="window-title">title</div>\n                    <div class="window-tools"><span class="window-hide">_</span></div>\n                </div>\n                <slot class="window-body"></slot>\n            </div>\n        ',this.$root=this.shadow.querySelector(".window-root"),this.$sidebar=this.shadow.querySelector(".window-sidebar"),this.$hideButton=this.shadow.querySelector(".window-hide"),this.$sidebar.addEventListener("click",(()=>{console.log("test")})),this.$body=this.shadow.querySelector(".window-body"),this.attachDragEventOn(this.$sidebar),this.attachHidenEvent()}attachHidenEvent(){this.$hideButton.addEventListener("click",this.hide.bind(this)),this.renderHide()}attachDragEventOn(e=null){e=null!=e?e:this.$root,this.renderMove(),e.addEventListener("mousedown",(e=>{this.cursorPoint=new t(e.clientX,e.clientY),this.cursorPoint=this.cursorPoint.minus(this.pos),document.addEventListener("mouseup",(t=>{this.cursorPoint=null,document.removeEventListener("mousemove",this.onDragCallback)})),document.addEventListener("mousemove",this.onDragCallback)}))}renderMove(){this.$root.style.top=this.pos.y+"px",this.$root.style.left=this.pos.x+"px"}renderHide(){let t=this.$root.offsetWidth;this.$hideButton.textContent=this.hiden?"â–­":"-",this.$root.style.width=this.hiden?t+"px":"inherit",this.$body.style.display=this.hiden?"none":"inherit"}initAttributes(){var e,i;this.hiden=!1,this.pos=new t(null!=(e=this.getAttribute("left"))?e:0,null!=(i=this.getAttribute("top"))?i:0)}drag(e){this.pos=new t(e.clientX,e.clientY).minus(this.cursorPoint),this.renderMove(),e.stopImmediatePropagation()}hide(t){this.hiden=!this.hiden,this.renderHide()}}customElements.define("app-windowed",e);
